# 최소/최대힙 (최솟값 또는 최댓값(음수) 기준으로 정렬)

from heapq import *
n,t,m = map(int,(input().split()))
a = list(map(int,input().split()))
heap = [] # 최대(음수) / 최소값을 pop할때 사용 
res= -1e9 # 최댓값 구하기 
sum = 0 # 채굴시간 (이동시간(t)는 지속 차감)

for i in a:
    heappush(heap,-i) #heap에 담기 (최소힙으로 음수 절대값으로)
    sum += i
    while sum > t:
        sum += heappop(heap) #시간초과하면 제일작은수 (제일 큰수) 내보냄 
    
    t -= m
    res= max(res,len(heap))

print(res)




'''
6 17 1
3 5 2 6 9 1

4

광부 도도새는 석탄을 캐려고 합니다. 광산에는 N 개의 석탄이 일렬로 놓여 있고, 
도새는 첫 번째 석탄에 위치해 있습니다. 각 석탄 i는 서로 같거나 다른 강도를 가지고 있어서, 
석탄을 캐기 위해 해야 하는 곡괭이질의 수K 또한 서로 같거나 다르다고 합니다.

도도새는 석탄을 캐기 위해 다음과 같은 행동을 할 수 있습니다.
시간 1을 소비하여, 도도새가 위치해 있는 석탄에 곡괭이질을 1번 합니다.

시간 P를 소비하여, 이웃한 석탄으로 이동합니다.

도도새에게 T만큼의 시간이 주어졌을 때, 캘 수 있는 석탄의 최대 개수를 출력하는 프로그램을 작성하세요.
'''