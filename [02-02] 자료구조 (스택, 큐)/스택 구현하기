'''

[실습1 해설] 스택 구현하기

스택 구현하기
이번 예제에서는 정수를 저장하는 stack을 구현합니다.

stack 클래스 내부에 있는 함수를 완성시키고 아래의 예제를 테스트해보세요.

완벽하게 동작한다고 생각되시면 제출을 눌러 점수를 확인해보세요!


지시사항
첫 번째 줄에 스택이 수행할 연산의 개수를 나타내는 정수 
�
n이 입력됩니다. (
1
≤
�
≤
10000
1≤n≤10000)

두 번째 줄부터 n개의 줄에 걸쳐 스택이 수행할 연산을 입력합니다.

1 x : 스택에 정수 x를 입력
2 : 스택에서 정수를 제거
3 : 스택의 size 출력
4 : 스택이 비어있는지 여부 출력
5 : 스택의 꼭대기 값 출력
테스트를 위한 코드는 main.py파일에서 확인하실 수 있습니다.

입력 예시 1
8
1 1
1 2
2
1 4
2
3
5
4
Copy
출력 예시 1
1
1
0
Copy
입력 예시 2
6
1 3
2
2
3
5
4
Copy
출력 예시 2
0
-1
1
Copy

'''

'''
Stack 클래스를 완성하세요.
'''

class Stack:
    '''
    List를 이용하여 다음의 method들을 작성하세요.
    '''
    def __init__(self) :
        '''
        자료를 저장할 공간(배열) myStack을 만듭니다.
        '''
        pass

    def push(self, n) :
        '''
        stack에 정수 n을 넣습니다.
        '''
        pass

    def pop(self) :
        '''
        stack에서 가장 위에 있는 정수를 제거합니다. 만약 stack에 아무 원소가 없다면 아무 일도 하지 않습니다.
        '''
        pass

    def size(self) :
        '''
        stack에 들어 있는 정수의 개수를 return 합니다.
        '''
        pass

    def empty(self) :
        '''
        stack이 비어있다면 1, 아니면 0을 return 합니다.
        '''
        pass

    def top(self) :
        '''
        stack의 가장 위에 있는 정수를 return 합니다. 만약 stack에 들어있는 값이 없을 경우에는 -1을 return 합니다.
        '''
        pass
