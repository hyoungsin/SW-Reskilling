'''
출력
N개의 줄에 걸쳐, 연산을 차례대로 모두 적용한 뒤 배열의 상태를 출력합니다.

[예제 입력 1]
3 1
1 2 3
4 5 6
7 8 9
1
Copy
[예제 출력 1]
3 2 1
6 5 4
9 8 7
Copy
[예제 입력 2]
3 1
1 2 3
4 5 6
7 8 9
2
Copy
[예제 출력 2]
7 8 9
4 5 6
1 2 3
Copy
[예제 입력 3]
3 1
1 2 3
4 5 6
7 8 9
3
Copy
[예제 출력 3]
7 4 1
8 5 2
9 6 3
Copy
[예제 입력 4]
3 1
1 2 3
4 5 6
7 8 9
4
Copy
[예제 출력 4]
3 6 9
2 5 8
1 4 7
Copy
[예제 입력 5]
3 5
1 2 3
4 5 6
7 8 9
1
2
3
4
1
Copy
[예제 출력 5]
7 8 9
4 5 6
1 2 3
'''

import sys

read = sys.stdin.readline
global n, q

def rotate_left(a):
    temp = [[0] * n for _ in range(n)]

    for i in range(n):
        for j in range(n):
            temp[i][j] = a[j][n - i - 1]
    return temp


def rotate_right(a):
    temp = [[0] * n for i in range(n)]

    for i in range(n):
        for j in range(n):
            temp[i][j] = a[n - j - 1][i]
    return temp

def left_right(a):
    for i in range(len(a)):
        a[i].reverse() # 거꾸로 정렬

    return a


def up_down(a):
    a = a[::-1] # 
    return a

def main():
    global n, q
    n, q = map(int, read().split())

    a = []
    # 입력 받기
    for i in range(n):
        r = list(map(int, read().split()))
        a.append(r)

    for i in range(q):
        x = int(read())
        if x == 1:
            a = left_right(a)

        elif x == 2:
            a = up_down(a)

        elif x == 3:
            a = rotate_right(a)

        elif x == 4:
            a = rotate_left(a)

    for i in range(n):
        for j in range(n):
            print(a[i][j], end= ' ')
        print()


if __name__ == "__main__":
    main()
