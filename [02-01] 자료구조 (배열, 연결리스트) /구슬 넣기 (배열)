'''

[실습2 해설] 구슬 넣기 (배열)

구슬 넣기 (배열)
Elice의 토끼는 암기력을 높이기 위해 구슬 넣기 놀이를 고안했습니다.

토끼는 
�
n개의 구슬이 있으며, 각 구슬은 1부터 
�
n까지의 번호를 하나씩 갖고 있습니다. 또한, 토끼는 양 쪽이 뚫려있고 투명하지 않은 관을 갖고 있습니다.

토끼는 
�
n개의 구슬을 이 파이프에 무작위로 넣은 후에, 최종적으로 구슬이 파이프 속에서 어떻게 배치되어 있는지를 암기함으로써 암기력을 높이려고 합니다.

토끼는 파이프의 왼쪽에, 혹은 오른쪽에 구슬을 넣을 수 있습니다. 예를 들어, 파이프의 왼쪽으로 숫자 1의 구슬을 넣고, 파이프의 오른쪽으로 숫자 3의 구슬을 넣고, 마지막으로 파이프의 왼쪽으로 숫자 2의 구슬을 넣게 되면, 최종적으로 구슬의 배치는 2 1 3 이 됩니다.

토끼가 
�
n개의 구슬을 파이프에 넣는 행위가 입력으로 주어질 때, 최종적으로 구슬이 파이프 속에서 어떻게 배치되어 있는지를 출력하는 프로그램을 작성하세요.

(단, 파이프의 길이는 
�
n개의 구슬을 모두 담기에 충분히 길다고 가정합니다.)


지시사항
입력
입력의 첫 번째 줄에는 구슬의 개수 
�
n이 주어집니다. (
100
≤
�
≤
200000
100≤n≤200000)

두 번째 줄부터는 토끼가 구슬을 넣는 행위가 주어집니다.

각 줄은 두 개의 정수 
�
a, 
�
b로 이루어지며, 이 뜻은 구슬 
�
a를 왼쪽 혹은 오른쪽으로 넣는다는 의미입니다. (
1
≤
�
≤
1000000000
1≤a≤1000000000)

(
�
b가 0이면 왼쪽, 
�
b가 1이면 오른쪽이며 그 외의 입력은 주어지지 않는다)

출력
최종적으로 구슬이 파이프 속에서 어떻게 배치되어 있는지를 출력한다.

입력 예시
3
1 0
2 1
3 0
Copy
출력 예시
3 1 2
Copy
'''

# 접근 :  insert(왼쪽),append(오를쪽부터),remove(왼쪽부터),pop (오를쪽부터),leftpop(왼쪽부터)
class ListPipe:
    def __init__(self) : # 함수 선언 
        self.myPipe = [] # 파이프 구성 (구슬이 들어갈)
    def addLeft(self, n) :
        self.myPipe.insert(0, n) # insert 왼쪽으로 삽입
    def addRight(self, n) :
        self.myPipe.append(n) # append (오른쪽으로 삽입)
    def getBeads(self) : 
        return self.myPipe # getBead  (구슬 위치 pipeline확인)
