'''

[실습1 해설] 링크가 있는 게시물

링크가 있는 게시물
이번 주 실습에서도 지난 주와 같이 Facebook의 개념들을 클래스로 구현해 봅니다.

실습 1에서는 Facebook에서 외부의 사이트로 이동하는 링크가 포함된 게시물(LinkPost)을 구현해 보겠습니다.

LinkPost는 다음과 같은 조건들을 만족해야 합니다.

Post를 상속받습니다.
웹사이트 주소 형식의 문자열 속성 url을 갖습니다.
링크를 클릭했을 때의 액션을 정의한 on_click() 메소드를 갖습니다.
LinkPost의 생성자는 author, content, url 총 3개의 매개변수를 순서대로 받습니다. 이 실습에서는 author와 post의 형태는 체크하지 않습니다.

올바른 웹사이트 주소 형식은 "http://" 혹은 "https://"로 시작해야 합니다. 이를 확인하기 위해 Python 문자열의 메소드인 .startswith()를 사용합니다. 만일 주소 형식이 올바르지 않을 경우 ValueError를 발생시킵니다.

on_click() 메소드에서는 미리 정의된 go_to(link) 함수를 호출합니다. go_to() 메소드는 이동할 웹사이트의 주소를 출력해 줍니다.
'''
from utils import go_to
class Post:
    def __init__(self, author, content): # 일반적으로 부모 정보보다 자식정보가 많다
        self.author = author
        self.content = content
class LinkPost(Post): # 부모 class = Post 임 
    def __init__(self, author, content, url): # 더 상세한 정보가 있음 (url),인자에서 호출하는 순서 따라야함 
        self.url = url
        super().__init__(author, content) # 부모 update (url은 부모에 없음)
        if not url.startswith("http://") and not url.startswith("https://"): # 영문법과 비슷함 (startswith)
            raise ValueError("url 정보가 올바르지 않습니다.")
    def on_click(self):
        go_to(self.url) # go_to함수 활용 self의 url 활용 (사용자가 click한 URL)
my_post = LinkPost("LG", "Python", "http://naver.com") # 입력하는 값이 self.url임 
print(my_post.author)  
